[{"path":[]},{"path":"https://calderonsamuel.github.io/skellm/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://calderonsamuel.github.io/skellm/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://calderonsamuel.github.io/skellm/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://calderonsamuel.github.io/skellm/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://calderonsamuel.github.io/skellm/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://calderonsamuel.github.io/skellm/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://calderonsamuel.github.io/skellm/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://calderonsamuel.github.io/skellm/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://calderonsamuel.github.io/skellm/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://calderonsamuel.github.io/skellm/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://calderonsamuel.github.io/skellm/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://calderonsamuel.github.io/skellm/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to skellm","title":"Contributing to skellm","text":"outlines propose change skellm. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://calderonsamuel.github.io/skellm/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to skellm","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://calderonsamuel.github.io/skellm/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to skellm","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://calderonsamuel.github.io/skellm/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to skellm","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"calderonsamuel/skellm\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://calderonsamuel.github.io/skellm/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to skellm","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://calderonsamuel.github.io/skellm/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to skellm","text":"Please note skellm project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://calderonsamuel.github.io/skellm/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Samuel Calderon Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://calderonsamuel.github.io/skellm/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with skellm","title":"Getting help with skellm","text":"Thanks using skellm! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://calderonsamuel.github.io/skellm/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with skellm","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://calderonsamuel.github.io/skellm/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with skellm","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://calderonsamuel.github.io/skellm/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with skellm","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://calderonsamuel.github.io/skellm/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"https://calderonsamuel.github.io/skellm/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2023). skellm: Package (One Line, Title Case). R package version 0.0.0.9000, https://calderonsamuel.github.io/skellm/, https://github.com/calderonsamuel/skellm.","code":"@Manual{,   title = {skellm: What the Package Does (One Line, Title Case)},   author = {First Last},   year = {2023},   note = {R package version 0.0.0.9000, https://calderonsamuel.github.io/skellm/},   url = {https://github.com/calderonsamuel/skellm}, }"},{"path":"https://calderonsamuel.github.io/skellm/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://calderonsamuel.github.io/skellm/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://calderonsamuel.github.io/skellm/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://calderonsamuel.github.io/skellm/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://calderonsamuel.github.io/skellm/reference/prop_scalar_validator.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate scalar properties of S7 classes — prop_scalar_validator","title":"Validate scalar properties of S7 classes — prop_scalar_validator","text":"Validator function factory scalar properties. Use create functions passed validators S7 properties.","code":""},{"path":"https://calderonsamuel.github.io/skellm/reference/prop_scalar_validator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate scalar properties of S7 classes — prop_scalar_validator","text":"","code":"prop_scalar_validator(type, allow_null = FALSE)"},{"path":"https://calderonsamuel.github.io/skellm/reference/prop_scalar_validator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate scalar properties of S7 classes — prop_scalar_validator","text":"type character specifying type scalar property. Possible values \"character\" \"boolean\". allow_null logical indicating whether NULL allowed value property. used, accompanied defining property's class argument union NULL targeted class, using NULL property's default value.","code":""},{"path":"https://calderonsamuel.github.io/skellm/reference/prop_scalar_validator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate scalar properties of S7 classes — prop_scalar_validator","text":"function returns validation message value pass validation, NULL otherwise.","code":""},{"path":"https://calderonsamuel.github.io/skellm/reference/prop_scalar_validator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate scalar properties of S7 classes — prop_scalar_validator","text":"","code":"prop_scalar_validator(\"character\")(5) #> Error in prop_scalar_validator(\"character\"): could not find function \"prop_scalar_validator\" prop_scalar_validator(\"boolean\")(TRUE) #> Error in prop_scalar_validator(\"boolean\"): could not find function \"prop_scalar_validator\""},{"path":"https://calderonsamuel.github.io/skellm/reference/skellm-package.html","id":null,"dir":"Reference","previous_headings":"","what":"skellm: What the Package Does (One Line, Title Case) — skellm-package","title":"skellm: What the Package Does (One Line, Title Case) — skellm-package","text":"package (one paragraph).","code":""},{"path":[]},{"path":"https://calderonsamuel.github.io/skellm/reference/skellm-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"skellm: What the Package Does (One Line, Title Case) — skellm-package","text":"Maintainer: First Last first.last@example.com (ORCID)","code":""},{"path":"https://calderonsamuel.github.io/skellm/reference/skellm_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a message — skellm_message","title":"Create a message — skellm_message","text":"class represents standard message format.","code":""},{"path":"https://calderonsamuel.github.io/skellm/reference/skellm_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a message — skellm_message","text":"","code":"skellm_message(   role = class_missing,   content = class_missing,   name = class_missing )"},{"path":"https://calderonsamuel.github.io/skellm/reference/skellm_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a message — skellm_message","text":"role role message's author. Typically one \"user\", \"system\" \"assistant\". enforce closed list roles offer freedom. content content message. name (Optional) name message's author. Useful differentiate agents role.","code":""},{"path":"https://calderonsamuel.github.io/skellm/reference/skellm_message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a message — skellm_message","text":"object class skellm_message","code":""},{"path":"https://calderonsamuel.github.io/skellm/reference/skellm_message.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a message — skellm_message","text":"","code":"skellm_message(role = \"system\", content = \"You are a helpful assistant\") #> <skellm_message> #>  @ role   : chr \"system\" #>  @ content: chr \"You are a helpful assistant\" #>  @ name   : NULL skellm_message(role = \"user\", content = \"What is 2 + 2\") #> <skellm_message> #>  @ role   : chr \"user\" #>  @ content: chr \"What is 2 + 2\" #>  @ name   : NULL skellm_message(role = \"user\", content = \"<Object documentation>\", name = \"docs\") #> <skellm_message> #>  @ role   : chr \"user\" #>  @ content: chr \"<Object documentation>\" #>  @ name   : chr \"docs\""},{"path":"https://calderonsamuel.github.io/skellm/reference/skellm_message_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a message history — skellm_message_history","title":"Create a message history — skellm_message_history","text":"class wraps list messages.","code":""},{"path":"https://calderonsamuel.github.io/skellm/reference/skellm_message_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a message history — skellm_message_history","text":"","code":"skellm_message_history(...)"},{"path":"https://calderonsamuel.github.io/skellm/reference/skellm_message_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a message history — skellm_message_history","text":"... number messages provide. one must skellm_message object.","code":""},{"path":"https://calderonsamuel.github.io/skellm/reference/skellm_message_history.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a message history — skellm_message_history","text":"object class skellm_message_history.","code":""},{"path":"https://calderonsamuel.github.io/skellm/reference/skellm_message_history.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a message history — skellm_message_history","text":"","code":"skellm_message_history(   skellm_message(     role = \"user\",     content = \"What is 2 + 2\"   ) ) #> <skellm_message_history> List of 1 #>  $ : <skellm_message> #>   ..@ role   : chr \"user\" #>   ..@ content: chr \"What is 2 + 2\" #>   ..@ name   : NULL"},{"path":"https://calderonsamuel.github.io/skellm/reference/skellm_skeleton.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a LLM skeleton — skellm_skeleton","title":"Create a LLM skeleton — skellm_skeleton","text":"class handles creation LLM skeletons","code":""},{"path":"https://calderonsamuel.github.io/skellm/reference/skellm_skeleton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a LLM skeleton — skellm_skeleton","text":"","code":"skellm_skeleton(   url = class_missing,   model = class_missing,   history = class_missing,   stream = class_missing,   api_key = class_missing )"},{"path":"https://calderonsamuel.github.io/skellm/reference/skellm_skeleton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a LLM skeleton — skellm_skeleton","text":"url host's URL. model Identifier model used. history Messages included request. default, empty skellm_message_history S7 object. stream Whether stream incomming response. FALSE default. api_key (Optional) API key service.","code":""},{"path":"https://calderonsamuel.github.io/skellm/reference/skellm_skeleton.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a LLM skeleton — skellm_skeleton","text":"object class skellm_skeleton.","code":""},{"path":"https://calderonsamuel.github.io/skellm/reference/skellm_skeleton.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a LLM skeleton — skellm_skeleton","text":"","code":"# For Ollama skellm_skeleton(   url = \"http://localhost:11434/api/chat\",    model = \"mistral\" ) #> <skellm::skellm_skeleton> #>  @ url    : chr \"http://localhost:11434/api/chat\" #>  @ model  : chr \"mistral\" #>  @ history: <skellm_message_history>  list() #>  @ stream : logi FALSE #>  @ api_key: NULL #>  @ extra  : list()  # For OpenAI skellm_skeleton(   url = \"https://api.openai.com/v1/chat/completions\",    model = \"gpt-3.5-turbo\",   history = skellm_message_history(     skellm_message(role = \"system\", content = \"You are a helpful assistant\"),     skellm_message(role = \"user\", content = \"What is 2 + 2\")   ),   stream = TRUE,   api_key = \"<your_api_key>\" ) #> <skellm::skellm_skeleton> #>  @ url    : chr \"https://api.openai.com/v1/chat/completions\" #>  @ model  : chr \"gpt-3.5-turbo\" #>  @ history: <skellm_message_history> List of 2 #>  .. $ : <skellm_message> #>  ..  ..@ role   : chr \"system\" #>  ..  ..@ content: chr \"You are a helpful assistant\" #>  ..  ..@ name   : NULL #>  .. $ : <skellm_message> #>  ..  ..@ role   : chr \"user\" #>  ..  ..@ content: chr \"What is 2 + 2\" #>  ..  ..@ name   : NULL #>  @ stream : logi TRUE #>  @ api_key: chr \"<your_api_key>\" #>  @ extra  : list()"}]
